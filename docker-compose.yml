version: '3.4'

services:
  api:
    image: api
    container_name: api
    build:
      context: .
      dockerfile: TransactionalEmail.Api/Dockerfile
    ports:
      - 80:80
    depends_on:
      - mongo
    networks:
      - te_local

  cli:
    image: cli
    container_name: cli
    build:
      context: .
      dockerfile: TransactionalEmail.Cli/Dockerfile
    profiles:
      - cli
    depends_on:
      - mongo
    networks:
      - te_local

  test:
    image: test
    container_name: test
    build:
      context: .
      dockerfile: TransactionalEmail.Tests/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Testing
    profiles:
      - test
    depends_on:
      - mongo
    networks:
      - te_local

  mongo:
    image: mongo
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: pass
    ports:
      - 27017:27017
    networks:
      - te_local
    volumes:
      - mongo_data:/data/db

  mongo-express:
    image: mongo-express
    container_name: express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: pass
    depends_on:
      - mongo
    networks:
      - te_local

  consumer:
    image: consumer
    container_name: consumer
    build:
      context: .
      dockerfile: TransactionalEmail.Consumer/Dockerfile
    ports:
      - 8080:8080
    depends_on:
      - api
    networks:
      - te_local

networks:
  te_local:
volumes:
  mongo_data:
